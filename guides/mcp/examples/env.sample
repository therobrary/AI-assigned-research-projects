# MCP Gateway Configuration
# =========================

# Gateway Ports
MCP_GATEWAY_PORT=8080
MCP_GATEWAY_SSL_PORT=8443
MCP_DOMAIN=localhost

# Authentication & Security
# Generate secure keys using: openssl rand -hex 32
MCP_API_KEY=your-secure-api-key-here-replace-with-32-char-hex
MCP_JWT_SECRET=your-jwt-secret-key-here-replace-with-32-char-hex

# OAuth2 Configuration (optional)
OAUTH_CLIENT_ID=your-oauth-client-id
OAUTH_CLIENT_SECRET=your-oauth-client-secret
OAUTH_PROVIDER=auth0
OAUTH_REDIRECT_URI=https://your-domain.com/auth/callback

# Server Ports
STOUT_SERVER_PORT=8081
SSE_SERVER_PORT=8082
STREAMABLE_SERVER_PORT=8083

# Database Configuration
# ======================

# PostgreSQL Database
POSTGRES_DB=mcp_db
POSTGRES_USER=mcp_user
POSTGRES_PASSWORD=secure-database-password-replace-me

# Redis Configuration
REDIS_PASSWORD=secure-redis-password-replace-me

# Monitoring & Logging
# ====================

# Log Level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Metrics and Monitoring
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
GRAFANA_ADMIN_PASSWORD=secure-grafana-password-replace-me

# Performance Tuning
# ===================

# Gateway Configuration
GATEWAY_MAX_WORKERS=4
GATEWAY_REQUEST_TIMEOUT=30
GATEWAY_MAX_CONNECTIONS=1000

# Stout Server Configuration
STOUT_MAX_WORKERS=8
STOUT_REQUEST_TIMEOUT=30
STOUT_MAX_QUEUE_SIZE=100

# SSE Server Configuration
SSE_MAX_CONNECTIONS=100
SSE_STREAM_TIMEOUT=300
SSE_HEARTBEAT_INTERVAL=30

# Streamable Server Configuration
STREAMABLE_MAX_CHUNK_SIZE=1048576  # 1MB
STREAMABLE_STREAM_TIMEOUT=600
STREAMABLE_MAX_CONCURRENT_STREAMS=50

# SSL/TLS Configuration
# =====================

# SSL Certificate paths (relative to docker-compose.yml)
SSL_CERT_PATH=./ssl/mcp-gateway.crt
SSL_KEY_PATH=./ssl/mcp-gateway.key

# SSL Configuration
SSL_PROTOCOLS=TLSv1.2,TLSv1.3
SSL_CIPHERS=ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS

# Rate Limiting
# =============

# Requests per minute per client
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# Burst allowance
RATE_LIMIT_BURST=20

# Rate limiting window in seconds
RATE_LIMIT_WINDOW=60

# Development/Production Settings
# ===============================

# Environment (development, staging, production)
ENVIRONMENT=development

# Debug mode (true/false)
DEBUG_MODE=false

# Enable request tracing (true/false)
TRACE_REQUESTS=false

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,https://your-domain.com
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With

# Health Check Configuration
# ==========================

# Health check intervals in seconds
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3

# Backup and Persistence
# ======================

# Data backup settings
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# Volume mount points
DATA_PATH=./data
CONFIG_PATH=./config
LOGS_PATH=./logs
SSL_PATH=./ssl

# External Service Integration
# ============================

# External API endpoints (if required)
EXTERNAL_API_ENDPOINT=https://api.external-service.com
EXTERNAL_API_KEY=your-external-api-key

# Webhook endpoints
WEBHOOK_ENDPOINT=https://your-domain.com/webhooks
WEBHOOK_SECRET=your-webhook-secret

# Advanced Configuration
# ======================

# Memory limits (for Docker containers)
GATEWAY_MEMORY_LIMIT=1g
STOUT_MEMORY_LIMIT=1g
SSE_MEMORY_LIMIT=512m
STREAMABLE_MEMORY_LIMIT=512m
REDIS_MEMORY_LIMIT=256m
POSTGRES_MEMORY_LIMIT=512m

# CPU limits (fractional cores)
GATEWAY_CPU_LIMIT=1.0
STOUT_CPU_LIMIT=1.0
SSE_CPU_LIMIT=0.5
STREAMABLE_CPU_LIMIT=0.5

# Network configuration
NETWORK_SUBNET=172.20.0.0/16

# Timezone
TZ=UTC

# ==============================================
# SECURITY NOTES:
# 
# 1. Replace all default passwords and keys
# 2. Use strong, unique passwords for each service
# 3. Generate API keys using: openssl rand -hex 32
# 4. Store this file securely and don't commit to version control
# 5. Use environment-specific .env files for different deployments
# 6. Rotate keys and passwords regularly
# 7. Enable SSL/TLS in production environments
# ==============================================